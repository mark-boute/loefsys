# Generated by Django 4.0.6 on 2022-07-10 15:25

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import events.models.event_registation


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_remove_user_id_alter_user_relation_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('start', models.DateTimeField(verbose_name='start time')),
                ('end', models.DateTimeField(verbose_name='end time')),
                ('category', models.CharField(choices=[('alumni', 'Alumni'), ('leisure', 'Leisure'), ('association', 'Association Affairs'), ('sailing', 'Sailing'), ('competition', 'Competition'), ('other', 'Other')], help_text="Alumni: Events organised for alumni, Leisure: borrels, parties, game activities etc., Association Affairs: general meetings or any other board related events, Sailing: sailingCompetition: NESTOR, Regatta's etcOther: anything else.", max_length=40, verbose_name='category')),
                ('registration_start', models.DateTimeField(blank=True, help_text="If you set a registration period registration will be required. If you don't set one, registration won't be required. Prefer times when people don't have lectures, e.g. 12:30 instead of 13:37.", null=True, verbose_name='registration start')),
                ('registration_end', models.DateTimeField(blank=True, help_text="If you set a registration period registration will be required. If you don't set one, registration won't be required.", null=True, verbose_name='registration end')),
                ('cancel_deadline', models.DateTimeField(blank=True, null=True, verbose_name='cancel deadline')),
                ('send_cancel_email', models.BooleanField(default=True, help_text='Send an email to the organising party when a member cancels their registration after the deadline.', verbose_name='send cancellation notifications')),
                ('optional_registrations', models.BooleanField(default=True, help_text='Participants can indicate their optional presence, even though registration is not actually required. This ignores registration start and end time or cancellation deadlines, optional registration will be enabled directly after publishing until the end of the event.', verbose_name='allow optional registrations')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('map_location', models.CharField(help_text="Location of Huygens: Heyendaalseweg 135, Nijmegen. Location of Mercator 1: Toernooiveld 212, Nijmegen. Use the input 'discord' or 'online' for special placeholders. Not shown as text!!", max_length=255, verbose_name='location for minimap')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='price')),
                ('fine', models.DecimalField(decimal_places=2, default=0, help_text='Fine if participant does not show up (at least â‚¬5).', max_digits=5, verbose_name='fine')),
                ('max_participants', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='maximum number of participants')),
                ('no_registration_message', models.CharField(blank=True, max_length=200, null=True, verbose_name='message when there is no registration')),
                ('published', models.BooleanField(default=False, verbose_name='published')),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='registration date')),
                ('date_cancelled', models.DateTimeField(blank=True, null=True, verbose_name='cancellation date')),
                ('present', models.BooleanField(default=False, verbose_name='present')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user', models.ForeignKey(blank=True, limit_choices_to=events.models.event_registation.registration_user_choices_limit, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
        ),
    ]

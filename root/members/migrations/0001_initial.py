# Generated by Django 4.0.6 on 2022-08-05 13:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.generic.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('relation_number', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('institution', models.CharField(blank=True, max_length=20, verbose_name='Educational institution')),
                ('programme', models.CharField(blank=True, max_length=20, verbose_name='Study programme')),
                ('student_number', models.CharField(blank=True, max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid student- or e/z/u-number.', regex='(s\\d{7}|[ezu]\\d{6,7})')], verbose_name='Student number')),
                ('RSC_number', models.CharField(blank=True, max_length=9, unique=True, verbose_name='RSC card number')),
                ('member_since', models.DateField()),
                ('member_until', models.DateField(blank=True, null=True)),
                ('alumni_since', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('IN', 'Collection')], max_length=2)),
                ('remark', models.TextField(blank=True, max_length=500)),
                ('address_street', models.CharField(max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='please use the format <street> <number>', regex='^.+ \\d+.*')], verbose_name='Street and house number')),
                ('address_street2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Second address line')),
                ('address_postal_code', models.CharField(max_length=10, null=True, verbose_name='Postal code')),
                ('address_city', models.CharField(max_length=40, null=True, verbose_name='City')),
                ('address_country', models.CharField(choices=[('AX', 'Ã…land Islands'), ('AL', 'Albania'), ('AD', 'Andorra'), ('AT', 'Austria'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BA', 'Bosnia and Herzegovina'), ('BG', 'Bulgaria'), ('HR', 'Croatia'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('EE', 'Estonia'), ('FO', 'Faroe Islands'), ('FI', 'Finland'), ('FR', 'France'), ('DE', 'Germany'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GG', 'Guernsey'), ('VA', 'Vatican City'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IT', 'Italy'), ('JE', 'Jersey'), ('LV', 'Latvia'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MK', 'Macedonia (FYROM)'), ('MT', 'Malta'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('ME', 'Montenegro'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('SM', 'San Marino'), ('RS', 'Serbia'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('ES', 'Spain'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('UA', 'Ukraine'), ('GB', 'United Kingdom')], max_length=2, null=True, verbose_name='Country')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('IBAN', localflavor.generic.models.IBANField(include_countries=None, max_length=34, use_nordea_extensions=False)),
                ('birthday', models.DateField(null=True, verbose_name='Birthday')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Prefer not to say')], max_length=1)),
                ('receive_newsletter', models.BooleanField(default=True, help_text='Receive the Newsletter', verbose_name='Receive newsletter')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_birthday', models.BooleanField(default=True, help_text='Show your birthday to other members on your profile page and in the birthday calendar', verbose_name='Display birthday')),
                ('profile_description', models.TextField(blank=True, help_text='Text to display on your profile', max_length=4096, verbose_name='Profile text')),
                ('initials', models.CharField(blank=True, max_length=20, null=True, verbose_name='Initials')),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nickname')),
                ('display_name_preference', models.CharField(choices=[('full', 'Show full name'), ('nickname', 'Show only nickname'), ('firstname', 'Show only first name'), ('initials', 'Show initials and last name'), ('fullnick', 'Show name like "John \'nickname\' Doe"'), ('nicklast', 'Show nickname and last name')], default='full', max_length=10, verbose_name='How to display name')),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='members.member')),
            ],
        ),
    ]
